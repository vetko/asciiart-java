/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'jj' at '2/28/17 12:38 PM' with Gradle 2.14.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

repositories {
    jcenter()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

def disclaimer = """
        Disclaimer (by Attila):
        -----------------------
            The ASCIIArtGenerator project was originally implemented by https://github.com/quickprogrammingtips.
            Original source can be found at: https://github.com/quickprogrammingtips/asciiart-java under a Creative Commons License (https://creativecommons.org/licenses/by/4.0/).
            
            Code refactored and adapted for the Gradle build-scan exercise by Attila (locally, not committed back to GitHub).
            See the "Custom values" in the Build Scan for more details. 
            """

build {
    println disclaimer
    addCustomBuildScanValues(disclaimer)
}

test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
}


// -------- util functions --------

private void addCustomBuildScanValues(disclaimer) {
    if (this.hasProperty("buildScan")) {
        buildScan.tag 'dirty'
        buildScan.link 'Original source', 'https://github.com/quickprogrammingtips/asciiart-java'
        buildScan.value 'Disclaimer', disclaimer
        addGitLogAsCustomBuildScanValue()
    }
}

private void addGitLogAsCustomBuildScanValue() {
    def gitStatus = 'git log --format=oneline origin/master..HEAD'.execute().text
    if (gitStatus) {
        buildScan.value 'Git Log (commits added by Attila)', gitStatus
    }
}
